{"id":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","dependencies":[{"name":"C:\\Users\\alaam\\Desktop\\KFUPM\\2022 jan( 212 )\\Cloud\\projectfb\\frontend\\package.json","includedInParent":true,"mtime":1651855379429},{"name":"C:\\Users\\alaam\\Desktop\\KFUPM\\2022 jan( 212 )\\Cloud\\projectfb\\frontend\\node_modules\\google-maps-react\\package.json","includedInParent":true,"mtime":1651855379380}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.areBoundsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  /**\n   * Compares two bound objects.\n   */\n\n  var areBoundsEqual = exports.areBoundsEqual = function areBoundsEqual(boundA, boundB) {\n    if (boundA === boundB) {\n      return true;\n    }\n    if (!(boundA instanceof Object) || !(boundB instanceof Object)) {\n      return false;\n    }\n    if (Object.keys(boundA).length !== Object.keys(boundB).length) {\n      return false;\n    }\n    if (!areValidBounds(boundA) || !areValidBounds(boundB)) {\n      return false;\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(boundA)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        if (boundA[key] !== boundB[key]) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n  var areValidBounds = function areValidBounds(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('north') && elem.hasOwnProperty('south') && elem.hasOwnProperty('east') && elem.hasOwnProperty('west');\n  };\n});"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/google-maps-react/dist/lib/areBoundsEqual.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}}],"sources":{"node_modules/google-maps-react/dist/lib/areBoundsEqual.js":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.areBoundsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  /**\n   * Compares two bound objects.\n   */\n\n  var areBoundsEqual = exports.areBoundsEqual = function areBoundsEqual(boundA, boundB) {\n    if (boundA === boundB) {\n      return true;\n    }\n    if (!(boundA instanceof Object) || !(boundB instanceof Object)) {\n      return false;\n    }\n    if (Object.keys(boundA).length !== Object.keys(boundB).length) {\n      return false;\n    }\n    if (!areValidBounds(boundA) || !areValidBounds(boundB)) {\n      return false;\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(boundA)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        if (boundA[key] !== boundB[key]) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n  var areValidBounds = function areValidBounds(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('north') && elem.hasOwnProperty('south') && elem.hasOwnProperty('east') && elem.hasOwnProperty('west');\n  };\n});"},"lineCount":84}},"error":null,"hash":"cc3069e30bd444648655ef8637a6f21a","cacheData":{"env":{}}}